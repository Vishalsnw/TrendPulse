"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/google";
exports.ids = ["pages/api/google"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "selenium-webdriver":
/*!*************************************!*\
  !*** external "selenium-webdriver" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("selenium-webdriver");

/***/ }),

/***/ "selenium-webdriver/chrome.js":
/*!***********************************************!*\
  !*** external "selenium-webdriver/chrome.js" ***!
  \***********************************************/
/***/ ((module) => {

module.exports = require("selenium-webdriver/chrome.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/google.js */ \"(api)/./pages/api/google.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/google\",\n        pathname: \"/api/google\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmdvb2dsZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGZ29vZ2xlLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2tEO0FBQ2xEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJlbmRwdWxzZS8/ZGQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2dvb2dsZS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dvb2dsZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dvb2dsZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/scrapers.js":
/*!*************************!*\
  !*** ./lib/scrapers.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGoogleTrending: () => (/* binding */ getGoogleTrending),\n/* harmony export */   getNetflixTrending: () => (/* binding */ getNetflixTrending),\n/* harmony export */   getRedditPopular: () => (/* binding */ getRedditPopular),\n/* harmony export */   getSpotifyTrending: () => (/* binding */ getSpotifyTrending),\n/* harmony export */   getTwitterTrending: () => (/* binding */ getTwitterTrending),\n/* harmony export */   getWikipediaTrending: () => (/* binding */ getWikipediaTrending),\n/* harmony export */   getYoutubeTrending: () => (/* binding */ getYoutubeTrending)\n/* harmony export */ });\n/* harmony import */ var selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! selenium-webdriver */ \"selenium-webdriver\");\n/* harmony import */ var selenium_webdriver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var selenium_webdriver_chrome_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! selenium-webdriver/chrome.js */ \"selenium-webdriver/chrome.js\");\n/* harmony import */ var selenium_webdriver_chrome_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(selenium_webdriver_chrome_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_2__]);\naxios__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Configure Chrome options for headless browsing\nfunction getChromeOptions() {\n    const options = new (selenium_webdriver_chrome_js__WEBPACK_IMPORTED_MODULE_1___default().Options)();\n    options.addArguments(\"--headless\");\n    options.addArguments(\"--no-sandbox\");\n    options.addArguments(\"--disable-dev-shm-usage\");\n    options.addArguments(\"--disable-gpu\");\n    options.addArguments(\"--window-size=1920,1080\");\n    options.addArguments(\"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n    return options;\n}\n// Google Trends Scraper using Selenium\nasync function getGoogleTrending() {\n    let driver;\n    try {\n        driver = await new selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Builder().forBrowser(\"chrome\").setChromeOptions(getChromeOptions()).build();\n        await driver.get(\"https://trends.google.com/trends/trendingsearches/daily?geo=IN\");\n        await driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".trending-searches-feed-item\")), 10000);\n        const trendElements = await driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".trending-searches-feed-item\"));\n        const trends = [];\n        for(let i = 0; i < Math.min(trendElements.length, 10); i++){\n            const element = trendElements[i];\n            const titleElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".title a\"));\n            const title = await titleElement.getText();\n            const trafficElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".summary-text\"));\n            const traffic = await trafficElement.getText();\n            if (title && traffic) {\n                trends.push({\n                    title: title,\n                    traffic: traffic,\n                    thumbnail: null,\n                    relatedQueries: [],\n                    url: `https://trends.google.com/trends/explore?q=${encodeURIComponent(title)}&geo=IN`\n                });\n            }\n        }\n        return trends;\n    } catch (error) {\n        console.error(\"Google Trends error:\", error);\n        throw new Error(\"Failed to fetch Google Trends data\");\n    } finally{\n        if (driver) await driver.quit();\n    }\n}\n// YouTube Trending Scraper using Selenium\nasync function getYoutubeTrending() {\n    let driver;\n    try {\n        driver = await new selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Builder().forBrowser(\"chrome\").setChromeOptions(getChromeOptions()).build();\n        await driver.get(\"https://www.youtube.com/feed/trending\");\n        await driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"ytd-video-renderer\")), 15000);\n        const videoElements = await driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"ytd-video-renderer\"));\n        const trends = [];\n        for(let i = 0; i < Math.min(videoElements.length, 10); i++){\n            const element = videoElements[i];\n            const titleElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"#video-title\"));\n            const title = await titleElement.getAttribute(\"title\");\n            const channelElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"#channel-name a\"));\n            const channel = await channelElement.getText();\n            const viewsElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"#metadata-line span:first-child\"));\n            const views = await viewsElement.getText();\n            const thumbnailElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"img\"));\n            const thumbnail = await thumbnailElement.getAttribute(\"src\");\n            const linkElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"#video-title\"));\n            const href = await linkElement.getAttribute(\"href\");\n            if (title && channel && views && thumbnail && href) {\n                trends.push({\n                    title: title,\n                    views: views,\n                    published: \"Recently\",\n                    thumbnail: thumbnail,\n                    channel: channel,\n                    url: href\n                });\n            }\n        }\n        return trends;\n    } catch (error) {\n        console.error(\"YouTube Trending error:\", error);\n        throw new Error(\"Failed to fetch YouTube trending data\");\n    } finally{\n        if (driver) await driver.quit();\n    }\n}\n// Twitter Trending Hashtags Scraper using Selenium\nasync function getTwitterTrending() {\n    let driver;\n    try {\n        driver = await new selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Builder().forBrowser(\"chrome\").setChromeOptions(getChromeOptions()).build();\n        await driver.get(\"https://getdaytrends.com/india\");\n        await driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".trend-card\")), 10000);\n        const trendElements = await driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".trend-card .trend-name\"));\n        const trends = [];\n        for(let i = 0; i < Math.min(trendElements.length, 10); i++){\n            const hashtag = await trendElements[i].getText();\n            if (hashtag && hashtag.length > 0) {\n                trends.push({\n                    hashtag: hashtag,\n                    rank: i + 1,\n                    url: `https://twitter.com/search?q=${encodeURIComponent(hashtag)}`\n                });\n            }\n        }\n        return trends;\n    } catch (error) {\n        console.error(\"Twitter Trending error:\", error);\n        throw new Error(\"Failed to fetch Twitter trending data\");\n    } finally{\n        if (driver) await driver.quit();\n    }\n}\n// Wikipedia Most Viewed Scraper (keep existing as it works)\nasync function getWikipediaTrending() {\n    try {\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n        const year = yesterday.getFullYear();\n        const month = String(yesterday.getMonth() + 1).padStart(2, \"0\");\n        const day = String(yesterday.getDate()).padStart(2, \"0\");\n        const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`https://wikimedia.org/api/rest_v1/metrics/pageviews/top/en.wikipedia/all-access/${year}/${month}/${day}`, {\n            headers: {\n                \"User-Agent\": \"TrendPulse/1.0 (https://trendpulse.app)\",\n                \"Accept\": \"application/json\"\n            },\n            timeout: 10000\n        });\n        if (!response.data?.items?.[0]?.articles) {\n            throw new Error(\"Invalid Wikipedia API response\");\n        }\n        const articles = response.data.items[0].articles.filter((article)=>!article.article.startsWith(\"Special:\") && !article.article.startsWith(\"Main_Page\") && article.article !== \"-\" && article.views > 1000).slice(0, 10);\n        return articles.map((article)=>({\n                title: article.article.replace(/_/g, \" \"),\n                views: article.views.toLocaleString(),\n                rank: article.rank,\n                url: `https://en.wikipedia.org/wiki/${encodeURIComponent(article.article)}`\n            }));\n    } catch (error) {\n        console.error(\"Wikipedia Trending error:\", error);\n        throw new Error(\"Failed to fetch Wikipedia trending data\");\n    }\n}\n// Reddit Popular Posts Scraper using Selenium\nasync function getRedditPopular() {\n    let driver;\n    try {\n        driver = await new selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Builder().forBrowser(\"chrome\").setChromeOptions(getChromeOptions()).build();\n        await driver.get(\"https://www.reddit.com/r/popular/\");\n        await driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css('[data-testid=\"post-container\"]')), 10000);\n        const postElements = await driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css('[data-testid=\"post-container\"]'));\n        const trends = [];\n        for(let i = 0; i < Math.min(postElements.length, 10); i++){\n            const element = postElements[i];\n            const titleElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"h3\"));\n            const title = await titleElement.getText();\n            const subredditElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css('[data-testid=\"subreddit-name\"]'));\n            const subreddit = await subredditElement.getText();\n            const upvotesElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css('[data-testid=\"vote-arrows\"] button'));\n            const upvotes = await upvotesElement.getAttribute(\"aria-label\");\n            const linkElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"h3 a\"));\n            const href = await linkElement.getAttribute(\"href\");\n            if (title && subreddit && href) {\n                trends.push({\n                    title: title,\n                    subreddit: subreddit,\n                    upvotes: upvotes || \"N/A\",\n                    comments: \"N/A\",\n                    url: href\n                });\n            }\n        }\n        return trends;\n    } catch (error) {\n        console.error(\"Reddit Popular error:\", error);\n        throw new Error(\"Failed to fetch Reddit trending data\");\n    } finally{\n        if (driver) await driver.quit();\n    }\n}\n// Spotify Top Songs Scraper using Selenium\nasync function getSpotifyTrending() {\n    let driver;\n    try {\n        driver = await new selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Builder().forBrowser(\"chrome\").setChromeOptions(getChromeOptions()).build();\n        await driver.get(\"https://kworb.net/spotify/country/in.html\");\n        await driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"table.sortable tbody tr\")), 10000);\n        const rowElements = await driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"table.sortable tbody tr\"));\n        const trends = [];\n        for(let i = 0; i < Math.min(rowElements.length, 10); i++){\n            const element = rowElements[i];\n            const rankElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"td:nth-child(1)\"));\n            const rank = await rankElement.getText();\n            const songArtistElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"td:nth-child(2)\"));\n            const songArtist = await songArtistElement.getText();\n            const streamsElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"td:nth-child(3)\"));\n            const streams = await streamsElement.getText();\n            if (songArtist && rank && streams) {\n                const parts = songArtist.split(\" - \");\n                const artist = parts[0] || \"Unknown Artist\";\n                const song = parts[1] || songArtist;\n                trends.push({\n                    rank: rank,\n                    song: song,\n                    artist: artist,\n                    streams: streams,\n                    url: `https://open.spotify.com/search/${encodeURIComponent(songArtist)}`\n                });\n            }\n        }\n        return trends;\n    } catch (error) {\n        console.error(\"Spotify Trending error:\", error);\n        throw new Error(\"Failed to fetch Spotify trending data\");\n    } finally{\n        if (driver) await driver.quit();\n    }\n}\n// Netflix Top 10 Scraper using Selenium\nasync function getNetflixTrending() {\n    let driver;\n    try {\n        driver = await new selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.Builder().forBrowser(\"chrome\").setChromeOptions(getChromeOptions()).build();\n        await driver.get(\"https://flixpatrol.com/top10/netflix/india/today/\");\n        await driver.wait(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.until.elementLocated(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".table-top10 tbody tr\")), 10000);\n        const rowElements = await driver.findElements(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".table-top10 tbody tr\"));\n        const trends = [];\n        for(let i = 0; i < Math.min(rowElements.length, 10); i++){\n            const element = rowElements[i];\n            const rankElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".table-td:first-child\"));\n            const rank = await rankElement.getText();\n            const titleElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\".title\"));\n            const title = await titleElement.getText();\n            const posterElement = await element.findElement(selenium_webdriver__WEBPACK_IMPORTED_MODULE_0__.By.css(\"img\"));\n            const poster = await posterElement.getAttribute(\"src\");\n            if (title && rank && poster) {\n                trends.push({\n                    rank: rank,\n                    title: title,\n                    poster: poster.startsWith(\"http\") ? poster : `https://flixpatrol.com${poster}`,\n                    url: `https://www.netflix.com/search?q=${encodeURIComponent(title)}`\n                });\n            }\n        }\n        return trends;\n    } catch (error) {\n        console.error(\"Netflix Trending error:\", error);\n        throw new Error(\"Failed to fetch Netflix trending data\");\n    } finally{\n        if (driver) await driver.quit();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/scrapers.js\n");

/***/ }),

/***/ "(api)/./pages/api/google.js":
/*!*****************************!*\
  !*** ./pages/api/google.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_scrapers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/scrapers */ \"(api)/./lib/scrapers.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_scrapers__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_scrapers__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const trends = await (0,_lib_scrapers__WEBPACK_IMPORTED_MODULE_0__.getGoogleTrending)();\n        res.status(200).json(trends);\n    } catch (error) {\n        console.error(\"Google Trends API error:\", error);\n        res.status(500).json({\n            message: \"Failed to fetch Google trends\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ29vZ2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ3VEO0FBRXhDLGVBQWVDLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1QyxJQUFJRCxJQUFJRSxNQUFNLEtBQUssT0FBTztRQUN4QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBcUI7SUFDOUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTUMsU0FBUyxNQUFNUixnRUFBaUJBO1FBQ3RDRyxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDRTtJQUN2QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDRCQUE0QkE7UUFDMUNOLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUFnQztJQUNsRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJlbmRwdWxzZS8uL3BhZ2VzL2FwaS9nb29nbGUuanM/ZmI5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IGdldEdvb2dsZVRyZW5kaW5nIH0gZnJvbSAnLi4vLi4vbGliL3NjcmFwZXJzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ0dFVCcpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBtZXNzYWdlOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgdHJlbmRzID0gYXdhaXQgZ2V0R29vZ2xlVHJlbmRpbmcoKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih0cmVuZHMpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0dvb2dsZSBUcmVuZHMgQVBJIGVycm9yOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdGYWlsZWQgdG8gZmV0Y2ggR29vZ2xlIHRyZW5kcycgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnZXRHb29nbGVUcmVuZGluZyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsInRyZW5kcyIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/google.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();