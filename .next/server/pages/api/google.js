"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/google";
exports.ids = ["pages/api/google"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("puppeteer");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/google.js */ \"(api)/./pages/api/google.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/google\",\n        pathname: \"/api/google\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_google_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmdvb2dsZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGZ29vZ2xlLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2tEO0FBQ2xEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJlbmRwdWxzZS8/ZGQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2dvb2dsZS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dvb2dsZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dvb2dsZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/scrapers.js":
/*!*************************!*\
  !*** ./lib/scrapers.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGoogleTrending: () => (/* binding */ getGoogleTrending),\n/* harmony export */   getNetflixTrending: () => (/* binding */ getNetflixTrending),\n/* harmony export */   getRedditPopular: () => (/* binding */ getRedditPopular),\n/* harmony export */   getSpotifyTrending: () => (/* binding */ getSpotifyTrending),\n/* harmony export */   getTwitterTrending: () => (/* binding */ getTwitterTrending),\n/* harmony export */   getWikipediaTrending: () => (/* binding */ getWikipediaTrending),\n/* harmony export */   getYoutubeTrending: () => (/* binding */ getYoutubeTrending)\n/* harmony export */ });\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([puppeteer__WEBPACK_IMPORTED_MODULE_0__, axios__WEBPACK_IMPORTED_MODULE_1__]);\n([puppeteer__WEBPACK_IMPORTED_MODULE_0__, axios__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n// Configure Puppeteer options for Replit environment\nfunction getBrowserOptions() {\n    return {\n        headless: true,\n        args: [\n            \"--no-sandbox\",\n            \"--disable-setuid-sandbox\",\n            \"--disable-dev-shm-usage\",\n            \"--disable-gpu\",\n            \"--disable-web-security\",\n            \"--disable-features=VizDisplayCompositor\",\n            \"--window-size=1920,1080\"\n        ],\n        ignoreDefaultArgs: [\n            \"--disable-extensions\"\n        ],\n        defaultViewport: {\n            width: 1920,\n            height: 1080\n        }\n    };\n}\n// Google Trends Scraper using Puppeteer\nasync function getGoogleTrending() {\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch(getBrowserOptions());\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n        await page.goto(\"https://trends.google.com/trends/trendingsearches/daily?geo=IN\", {\n            waitUntil: \"networkidle2\",\n            timeout: 30000\n        });\n        await page.waitForSelector(\".trending-searches-feed-item\", {\n            timeout: 15000\n        });\n        const trends = await page.evaluate(()=>{\n            const items = document.querySelectorAll(\".trending-searches-feed-item\");\n            const results = [];\n            items.forEach((item, index)=>{\n                if (index < 10) {\n                    const titleElement = item.querySelector(\".title a\");\n                    const trafficElement = item.querySelector(\".summary-text\");\n                    const title = titleElement?.textContent?.trim();\n                    const traffic = trafficElement?.textContent?.trim();\n                    if (title && traffic) {\n                        results.push({\n                            title: title,\n                            traffic: traffic,\n                            thumbnail: null,\n                            relatedQueries: [],\n                            url: `https://trends.google.com/trends/explore?q=${encodeURIComponent(title)}&geo=IN`\n                        });\n                    }\n                }\n            });\n            return results;\n        });\n        return trends;\n    } catch (error) {\n        console.error(\"Google Trends error:\", error);\n        throw new Error(\"Failed to fetch Google Trends data\");\n    } finally{\n        if (browser) await browser.close();\n    }\n}\n// YouTube Trending Scraper using Puppeteer\nasync function getYoutubeTrending() {\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch(getBrowserOptions());\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n        await page.goto(\"https://www.youtube.com/feed/trending\", {\n            waitUntil: \"networkidle2\",\n            timeout: 30000\n        });\n        await page.waitForSelector(\"ytd-video-renderer\", {\n            timeout: 15000\n        });\n        const trends = await page.evaluate(()=>{\n            const videos = document.querySelectorAll(\"ytd-video-renderer\");\n            const results = [];\n            videos.forEach((video, index)=>{\n                if (index < 10) {\n                    const titleElement = video.querySelector(\"#video-title\");\n                    const channelElement = video.querySelector(\"#channel-name a\");\n                    const viewsElement = video.querySelector(\"#metadata-line span:first-child\");\n                    const thumbnailElement = video.querySelector(\"img\");\n                    const title = titleElement?.getAttribute(\"title\");\n                    const channel = channelElement?.textContent?.trim();\n                    const views = viewsElement?.textContent?.trim();\n                    const thumbnail = thumbnailElement?.getAttribute(\"src\");\n                    const href = titleElement?.getAttribute(\"href\");\n                    if (title && channel && views && thumbnail && href) {\n                        results.push({\n                            title: title,\n                            views: views,\n                            published: \"Recently\",\n                            thumbnail: thumbnail,\n                            channel: channel,\n                            url: href.startsWith(\"http\") ? href : `https://youtube.com${href}`\n                        });\n                    }\n                }\n            });\n            return results;\n        });\n        return trends;\n    } catch (error) {\n        console.error(\"YouTube Trending error:\", error);\n        throw new Error(\"Failed to fetch YouTube trending data\");\n    } finally{\n        if (browser) await browser.close();\n    }\n}\n// Twitter Trending Hashtags Scraper using Puppeteer\nasync function getTwitterTrending() {\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch(getBrowserOptions());\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n        await page.goto(\"https://getdaytrends.com/india\", {\n            waitUntil: \"networkidle2\",\n            timeout: 30000\n        });\n        await page.waitForSelector(\".trend-card\", {\n            timeout: 15000\n        });\n        const trends = await page.evaluate(()=>{\n            const trendElements = document.querySelectorAll(\".trend-card .trend-name\");\n            const results = [];\n            trendElements.forEach((element, index)=>{\n                if (index < 10) {\n                    const hashtag = element.textContent?.trim();\n                    if (hashtag && hashtag.length > 0) {\n                        results.push({\n                            hashtag: hashtag,\n                            rank: index + 1,\n                            url: `https://twitter.com/search?q=${encodeURIComponent(hashtag)}`\n                        });\n                    }\n                }\n            });\n            return results;\n        });\n        return trends;\n    } catch (error) {\n        console.error(\"Twitter Trending error:\", error);\n        throw new Error(\"Failed to fetch Twitter trending data\");\n    } finally{\n        if (browser) await browser.close();\n    }\n}\n// Wikipedia Most Viewed Scraper (keep existing as it works)\nasync function getWikipediaTrending() {\n    try {\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n        const year = yesterday.getFullYear();\n        const month = String(yesterday.getMonth() + 1).padStart(2, \"0\");\n        const day = String(yesterday.getDate()).padStart(2, \"0\");\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`https://wikimedia.org/api/rest_v1/metrics/pageviews/top/en.wikipedia/all-access/${year}/${month}/${day}`, {\n            headers: {\n                \"User-Agent\": \"TrendPulse/1.0 (https://trendpulse.app)\",\n                \"Accept\": \"application/json\"\n            },\n            timeout: 10000\n        });\n        if (!response.data?.items?.[0]?.articles) {\n            throw new Error(\"Invalid Wikipedia API response\");\n        }\n        const articles = response.data.items[0].articles.filter((article)=>!article.article.startsWith(\"Special:\") && !article.article.startsWith(\"Main_Page\") && article.article !== \"-\" && article.views > 1000).slice(0, 10);\n        return articles.map((article)=>({\n                title: article.article.replace(/_/g, \" \"),\n                views: article.views.toLocaleString(),\n                rank: article.rank,\n                url: `https://en.wikipedia.org/wiki/${encodeURIComponent(article.article)}`\n            }));\n    } catch (error) {\n        console.error(\"Wikipedia Trending error:\", error);\n        throw new Error(\"Failed to fetch Wikipedia trending data\");\n    }\n}\n// Reddit Popular Posts Scraper using Puppeteer\nasync function getRedditPopular() {\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch(getBrowserOptions());\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n        await page.goto(\"https://www.reddit.com/r/popular/\", {\n            waitUntil: \"networkidle2\",\n            timeout: 30000\n        });\n        await page.waitForSelector('[data-testid=\"post-container\"]', {\n            timeout: 15000\n        });\n        const trends = await page.evaluate(()=>{\n            const posts = document.querySelectorAll('[data-testid=\"post-container\"]');\n            const results = [];\n            posts.forEach((post, index)=>{\n                if (index < 10) {\n                    const titleElement = post.querySelector(\"h3\");\n                    const subredditElement = post.querySelector('[data-testid=\"subreddit-name\"]');\n                    const upvotesElement = post.querySelector('[data-testid=\"vote-arrows\"] button');\n                    const linkElement = post.querySelector(\"h3 a\");\n                    const title = titleElement?.textContent?.trim();\n                    const subreddit = subredditElement?.textContent?.trim();\n                    const upvotes = upvotesElement?.getAttribute(\"aria-label\");\n                    const href = linkElement?.getAttribute(\"href\");\n                    if (title && subreddit && href) {\n                        results.push({\n                            title: title,\n                            subreddit: subreddit,\n                            upvotes: upvotes || \"N/A\",\n                            comments: \"N/A\",\n                            url: href.startsWith(\"http\") ? href : `https://reddit.com${href}`\n                        });\n                    }\n                }\n            });\n            return results;\n        });\n        return trends;\n    } catch (error) {\n        console.error(\"Reddit Popular error:\", error);\n        throw new Error(\"Failed to fetch Reddit trending data\");\n    } finally{\n        if (browser) await browser.close();\n    }\n}\n// Spotify Top Songs Scraper using Puppeteer\nasync function getSpotifyTrending() {\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch(getBrowserOptions());\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n        await page.goto(\"https://kworb.net/spotify/country/in.html\", {\n            waitUntil: \"networkidle2\",\n            timeout: 30000\n        });\n        await page.waitForSelector(\"table.sortable tbody tr\", {\n            timeout: 15000\n        });\n        const trends = await page.evaluate(()=>{\n            const rows = document.querySelectorAll(\"table.sortable tbody tr\");\n            const results = [];\n            rows.forEach((row, index)=>{\n                if (index < 10) {\n                    const rankElement = row.querySelector(\"td:nth-child(1)\");\n                    const songArtistElement = row.querySelector(\"td:nth-child(2)\");\n                    const streamsElement = row.querySelector(\"td:nth-child(3)\");\n                    const rank = rankElement?.textContent?.trim();\n                    const songArtist = songArtistElement?.textContent?.trim();\n                    const streams = streamsElement?.textContent?.trim();\n                    if (songArtist && rank && streams) {\n                        const parts = songArtist.split(\" - \");\n                        const artist = parts[0] || \"Unknown Artist\";\n                        const song = parts[1] || songArtist;\n                        results.push({\n                            rank: rank,\n                            song: song,\n                            artist: artist,\n                            streams: streams,\n                            url: `https://open.spotify.com/search/${encodeURIComponent(songArtist)}`\n                        });\n                    }\n                }\n            });\n            return results;\n        });\n        return trends;\n    } catch (error) {\n        console.error(\"Spotify Trending error:\", error);\n        throw new Error(\"Failed to fetch Spotify trending data\");\n    } finally{\n        if (browser) await browser.close();\n    }\n}\n// Netflix Top 10 Scraper using Puppeteer\nasync function getNetflixTrending() {\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch(getBrowserOptions());\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n        await page.goto(\"https://flixpatrol.com/top10/netflix/india/today/\", {\n            waitUntil: \"networkidle2\",\n            timeout: 30000\n        });\n        await page.waitForSelector(\".table-top10 tbody tr\", {\n            timeout: 15000\n        });\n        const trends = await page.evaluate(()=>{\n            const rows = document.querySelectorAll(\".table-top10 tbody tr\");\n            const results = [];\n            rows.forEach((row, index)=>{\n                if (index < 10) {\n                    const rankElement = row.querySelector(\".table-td:first-child\");\n                    const titleElement = row.querySelector(\".title\");\n                    const posterElement = row.querySelector(\"img\");\n                    const rank = rankElement?.textContent?.trim();\n                    const title = titleElement?.textContent?.trim();\n                    const poster = posterElement?.getAttribute(\"src\");\n                    if (title && rank && poster) {\n                        results.push({\n                            rank: rank,\n                            title: title,\n                            poster: poster.startsWith(\"http\") ? poster : `https://flixpatrol.com${poster}`,\n                            url: `https://www.netflix.com/search?q=${encodeURIComponent(title)}`\n                        });\n                    }\n                }\n            });\n            return results;\n        });\n        return trends;\n    } catch (error) {\n        console.error(\"Netflix Trending error:\", error);\n        throw new Error(\"Failed to fetch Netflix trending data\");\n    } finally{\n        if (browser) await browser.close();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUlFLE1BQU07SUFDbEIsU0FBVTtRQUNSLElBQUloQyxTQUFTLE1BQU1BLFFBQVFpQyxLQUFLO0lBQ2xDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmVuZHB1bHNlLy4vbGliL3NjcmFwZXJzLmpzP2Q4NWEiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgcHVwcGV0ZWVyIGZyb20gJ3B1cHBldGVlcic7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG4vLyBDb25maWd1cmUgUHVwcGV0ZWVyIG9wdGlvbnMgZm9yIFJlcGxpdCBlbnZpcm9ubWVudFxuZnVuY3Rpb24gZ2V0QnJvd3Nlck9wdGlvbnMoKSB7XG4gIHJldHVybiB7XG4gICAgaGVhZGxlc3M6IHRydWUsXG4gICAgYXJnczogW1xuICAgICAgJy0tbm8tc2FuZGJveCcsXG4gICAgICAnLS1kaXNhYmxlLXNldHVpZC1zYW5kYm94JyxcbiAgICAgICctLWRpc2FibGUtZGV2LXNobS11c2FnZScsXG4gICAgICAnLS1kaXNhYmxlLWdwdScsXG4gICAgICAnLS1kaXNhYmxlLXdlYi1zZWN1cml0eScsXG4gICAgICAnLS1kaXNhYmxlLWZlYXR1cmVzPVZpekRpc3BsYXlDb21wb3NpdG9yJyxcbiAgICAgICctLXdpbmRvdy1zaXplPTE5MjAsMTA4MCdcbiAgICBdLFxuICAgIGlnbm9yZURlZmF1bHRBcmdzOiBbJy0tZGlzYWJsZS1leHRlbnNpb25zJ10sXG4gICAgZGVmYXVsdFZpZXdwb3J0OiB7XG4gICAgICB3aWR0aDogMTkyMCxcbiAgICAgIGhlaWdodDogMTA4MFxuICAgIH1cbiAgfTtcbn1cblxuLy8gR29vZ2xlIFRyZW5kcyBTY3JhcGVyIHVzaW5nIFB1cHBldGVlclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEdvb2dsZVRyZW5kaW5nKCkge1xuICBsZXQgYnJvd3NlcjtcbiAgdHJ5IHtcbiAgICBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaChnZXRCcm93c2VyT3B0aW9ucygpKTtcbiAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7XG4gICAgXG4gICAgYXdhaXQgcGFnZS5zZXRVc2VyQWdlbnQoJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjAuMC4wLjAgU2FmYXJpLzUzNy4zNicpO1xuICAgIGF3YWl0IHBhZ2UuZ290bygnaHR0cHM6Ly90cmVuZHMuZ29vZ2xlLmNvbS90cmVuZHMvdHJlbmRpbmdzZWFyY2hlcy9kYWlseT9nZW89SU4nLCB7IFxuICAgICAgd2FpdFVudGlsOiAnbmV0d29ya2lkbGUyJyxcbiAgICAgIHRpbWVvdXQ6IDMwMDAwIFxuICAgIH0pO1xuXG4gICAgYXdhaXQgcGFnZS53YWl0Rm9yU2VsZWN0b3IoJy50cmVuZGluZy1zZWFyY2hlcy1mZWVkLWl0ZW0nLCB7IHRpbWVvdXQ6IDE1MDAwIH0pO1xuXG4gICAgY29uc3QgdHJlbmRzID0gYXdhaXQgcGFnZS5ldmFsdWF0ZSgoKSA9PiB7XG4gICAgICBjb25zdCBpdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50cmVuZGluZy1zZWFyY2hlcy1mZWVkLWl0ZW0nKTtcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICAgIFxuICAgICAgaXRlbXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKGluZGV4IDwgMTApIHtcbiAgICAgICAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy50aXRsZSBhJyk7XG4gICAgICAgICAgY29uc3QgdHJhZmZpY0VsZW1lbnQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5zdW1tYXJ5LXRleHQnKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBjb25zdCB0cmFmZmljID0gdHJhZmZpY0VsZW1lbnQ/LnRleHRDb250ZW50Py50cmltKCk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKHRpdGxlICYmIHRyYWZmaWMpIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7XG4gICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgICAgICAgdHJhZmZpYzogdHJhZmZpYyxcbiAgICAgICAgICAgICAgdGh1bWJuYWlsOiBudWxsLFxuICAgICAgICAgICAgICByZWxhdGVkUXVlcmllczogW10sXG4gICAgICAgICAgICAgIHVybDogYGh0dHBzOi8vdHJlbmRzLmdvb2dsZS5jb20vdHJlbmRzL2V4cGxvcmU/cT0ke2VuY29kZVVSSUNvbXBvbmVudCh0aXRsZSl9Jmdlbz1JTmBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRyZW5kcztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdHb29nbGUgVHJlbmRzIGVycm9yOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBHb29nbGUgVHJlbmRzIGRhdGEnKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAoYnJvd3NlcikgYXdhaXQgYnJvd3Nlci5jbG9zZSgpO1xuICB9XG59XG5cbi8vIFlvdVR1YmUgVHJlbmRpbmcgU2NyYXBlciB1c2luZyBQdXBwZXRlZXJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRZb3V0dWJlVHJlbmRpbmcoKSB7XG4gIGxldCBicm93c2VyO1xuICB0cnkge1xuICAgIGJyb3dzZXIgPSBhd2FpdCBwdXBwZXRlZXIubGF1bmNoKGdldEJyb3dzZXJPcHRpb25zKCkpO1xuICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKTtcbiAgICBcbiAgICBhd2FpdCBwYWdlLnNldFVzZXJBZ2VudCgnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2Jyk7XG4gICAgYXdhaXQgcGFnZS5nb3RvKCdodHRwczovL3d3dy55b3V0dWJlLmNvbS9mZWVkL3RyZW5kaW5nJywgeyBcbiAgICAgIHdhaXRVbnRpbDogJ25ldHdvcmtpZGxlMicsXG4gICAgICB0aW1lb3V0OiAzMDAwMCBcbiAgICB9KTtcblxuICAgIGF3YWl0IHBhZ2Uud2FpdEZvclNlbGVjdG9yKCd5dGQtdmlkZW8tcmVuZGVyZXInLCB7IHRpbWVvdXQ6IDE1MDAwIH0pO1xuXG4gICAgY29uc3QgdHJlbmRzID0gYXdhaXQgcGFnZS5ldmFsdWF0ZSgoKSA9PiB7XG4gICAgICBjb25zdCB2aWRlb3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCd5dGQtdmlkZW8tcmVuZGVyZXInKTtcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICAgIFxuICAgICAgdmlkZW9zLmZvckVhY2goKHZpZGVvLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAoaW5kZXggPCAxMCkge1xuICAgICAgICAgIGNvbnN0IHRpdGxlRWxlbWVudCA9IHZpZGVvLnF1ZXJ5U2VsZWN0b3IoJyN2aWRlby10aXRsZScpO1xuICAgICAgICAgIGNvbnN0IGNoYW5uZWxFbGVtZW50ID0gdmlkZW8ucXVlcnlTZWxlY3RvcignI2NoYW5uZWwtbmFtZSBhJyk7XG4gICAgICAgICAgY29uc3Qgdmlld3NFbGVtZW50ID0gdmlkZW8ucXVlcnlTZWxlY3RvcignI21ldGFkYXRhLWxpbmUgc3BhbjpmaXJzdC1jaGlsZCcpO1xuICAgICAgICAgIGNvbnN0IHRodW1ibmFpbEVsZW1lbnQgPSB2aWRlby5xdWVyeVNlbGVjdG9yKCdpbWcnKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRWxlbWVudD8uZ2V0QXR0cmlidXRlKCd0aXRsZScpO1xuICAgICAgICAgIGNvbnN0IGNoYW5uZWwgPSBjaGFubmVsRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBjb25zdCB2aWV3cyA9IHZpZXdzRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBjb25zdCB0aHVtYm5haWwgPSB0aHVtYm5haWxFbGVtZW50Py5nZXRBdHRyaWJ1dGUoJ3NyYycpO1xuICAgICAgICAgIGNvbnN0IGhyZWYgPSB0aXRsZUVsZW1lbnQ/LmdldEF0dHJpYnV0ZSgnaHJlZicpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmICh0aXRsZSAmJiBjaGFubmVsICYmIHZpZXdzICYmIHRodW1ibmFpbCAmJiBocmVmKSB7XG4gICAgICAgICAgICByZXN1bHRzLnB1c2goe1xuICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICAgIHZpZXdzOiB2aWV3cyxcbiAgICAgICAgICAgICAgcHVibGlzaGVkOiAnUmVjZW50bHknLFxuICAgICAgICAgICAgICB0aHVtYm5haWw6IHRodW1ibmFpbCxcbiAgICAgICAgICAgICAgY2hhbm5lbDogY2hhbm5lbCxcbiAgICAgICAgICAgICAgdXJsOiBocmVmLnN0YXJ0c1dpdGgoJ2h0dHAnKSA/IGhyZWYgOiBgaHR0cHM6Ly95b3V0dWJlLmNvbSR7aHJlZn1gXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9KTtcblxuICAgIHJldHVybiB0cmVuZHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignWW91VHViZSBUcmVuZGluZyBlcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggWW91VHViZSB0cmVuZGluZyBkYXRhJyk7XG4gIH0gZmluYWxseSB7XG4gICAgaWYgKGJyb3dzZXIpIGF3YWl0IGJyb3dzZXIuY2xvc2UoKTtcbiAgfVxufVxuXG4vLyBUd2l0dGVyIFRyZW5kaW5nIEhhc2h0YWdzIFNjcmFwZXIgdXNpbmcgUHVwcGV0ZWVyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VHdpdHRlclRyZW5kaW5nKCkge1xuICBsZXQgYnJvd3NlcjtcbiAgdHJ5IHtcbiAgICBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaChnZXRCcm93c2VyT3B0aW9ucygpKTtcbiAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7XG4gICAgXG4gICAgYXdhaXQgcGFnZS5zZXRVc2VyQWdlbnQoJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjAuMC4wLjAgU2FmYXJpLzUzNy4zNicpO1xuICAgIGF3YWl0IHBhZ2UuZ290bygnaHR0cHM6Ly9nZXRkYXl0cmVuZHMuY29tL2luZGlhJywgeyBcbiAgICAgIHdhaXRVbnRpbDogJ25ldHdvcmtpZGxlMicsXG4gICAgICB0aW1lb3V0OiAzMDAwMCBcbiAgICB9KTtcblxuICAgIGF3YWl0IHBhZ2Uud2FpdEZvclNlbGVjdG9yKCcudHJlbmQtY2FyZCcsIHsgdGltZW91dDogMTUwMDAgfSk7XG5cbiAgICBjb25zdCB0cmVuZHMgPSBhd2FpdCBwYWdlLmV2YWx1YXRlKCgpID0+IHtcbiAgICAgIGNvbnN0IHRyZW5kRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudHJlbmQtY2FyZCAudHJlbmQtbmFtZScpO1xuICAgICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgICAgXG4gICAgICB0cmVuZEVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgICAgIGlmIChpbmRleCA8IDEwKSB7XG4gICAgICAgICAgY29uc3QgaGFzaHRhZyA9IGVsZW1lbnQudGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoaGFzaHRhZyAmJiBoYXNodGFnLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7XG4gICAgICAgICAgICAgIGhhc2h0YWc6IGhhc2h0YWcsXG4gICAgICAgICAgICAgIHJhbms6IGluZGV4ICsgMSxcbiAgICAgICAgICAgICAgdXJsOiBgaHR0cHM6Ly90d2l0dGVyLmNvbS9zZWFyY2g/cT0ke2VuY29kZVVSSUNvbXBvbmVudChoYXNodGFnKX1gXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9KTtcblxuICAgIHJldHVybiB0cmVuZHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignVHdpdHRlciBUcmVuZGluZyBlcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggVHdpdHRlciB0cmVuZGluZyBkYXRhJyk7XG4gIH0gZmluYWxseSB7XG4gICAgaWYgKGJyb3dzZXIpIGF3YWl0IGJyb3dzZXIuY2xvc2UoKTtcbiAgfVxufVxuXG4vLyBXaWtpcGVkaWEgTW9zdCBWaWV3ZWQgU2NyYXBlciAoa2VlcCBleGlzdGluZyBhcyBpdCB3b3JrcylcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRXaWtpcGVkaWFUcmVuZGluZygpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgeWVzdGVyZGF5ID0gbmV3IERhdGUodG9kYXkpO1xuICAgIHllc3RlcmRheS5zZXREYXRlKHllc3RlcmRheS5nZXREYXRlKCkgLSAxKTtcblxuICAgIGNvbnN0IHllYXIgPSB5ZXN0ZXJkYXkuZ2V0RnVsbFllYXIoKTtcbiAgICBjb25zdCBtb250aCA9IFN0cmluZyh5ZXN0ZXJkYXkuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJyk7XG4gICAgY29uc3QgZGF5ID0gU3RyaW5nKHllc3RlcmRheS5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsICcwJyk7XG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChcbiAgICAgIGBodHRwczovL3dpa2ltZWRpYS5vcmcvYXBpL3Jlc3RfdjEvbWV0cmljcy9wYWdldmlld3MvdG9wL2VuLndpa2lwZWRpYS9hbGwtYWNjZXNzLyR7eWVhcn0vJHttb250aH0vJHtkYXl9YCxcbiAgICAgIHtcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdVc2VyLUFnZW50JzogJ1RyZW5kUHVsc2UvMS4wIChodHRwczovL3RyZW5kcHVsc2UuYXBwKScsXG4gICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICB9LFxuICAgICAgICB0aW1lb3V0OiAxMDAwMFxuICAgICAgfVxuICAgICk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLmRhdGE/Lml0ZW1zPy5bMF0/LmFydGljbGVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgV2lraXBlZGlhIEFQSSByZXNwb25zZScpO1xuICAgIH1cblxuICAgIGNvbnN0IGFydGljbGVzID0gcmVzcG9uc2UuZGF0YS5pdGVtc1swXS5hcnRpY2xlc1xuICAgICAgLmZpbHRlcihhcnRpY2xlID0+IFxuICAgICAgICAhYXJ0aWNsZS5hcnRpY2xlLnN0YXJ0c1dpdGgoJ1NwZWNpYWw6JykgJiYgXG4gICAgICAgICFhcnRpY2xlLmFydGljbGUuc3RhcnRzV2l0aCgnTWFpbl9QYWdlJykgJiZcbiAgICAgICAgYXJ0aWNsZS5hcnRpY2xlICE9PSAnLScgJiZcbiAgICAgICAgYXJ0aWNsZS52aWV3cyA+IDEwMDBcbiAgICAgIClcbiAgICAgIC5zbGljZSgwLCAxMCk7XG5cbiAgICByZXR1cm4gYXJ0aWNsZXMubWFwKGFydGljbGUgPT4gKHtcbiAgICAgIHRpdGxlOiBhcnRpY2xlLmFydGljbGUucmVwbGFjZSgvXy9nLCAnICcpLFxuICAgICAgdmlld3M6IGFydGljbGUudmlld3MudG9Mb2NhbGVTdHJpbmcoKSxcbiAgICAgIHJhbms6IGFydGljbGUucmFuayxcbiAgICAgIHVybDogYGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpLyR7ZW5jb2RlVVJJQ29tcG9uZW50KGFydGljbGUuYXJ0aWNsZSl9YFxuICAgIH0pKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdXaWtpcGVkaWEgVHJlbmRpbmcgZXJyb3I6JywgZXJyb3IpO1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIFdpa2lwZWRpYSB0cmVuZGluZyBkYXRhJyk7XG4gIH1cbn1cblxuLy8gUmVkZGl0IFBvcHVsYXIgUG9zdHMgU2NyYXBlciB1c2luZyBQdXBwZXRlZXJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSZWRkaXRQb3B1bGFyKCkge1xuICBsZXQgYnJvd3NlcjtcbiAgdHJ5IHtcbiAgICBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaChnZXRCcm93c2VyT3B0aW9ucygpKTtcbiAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7XG4gICAgXG4gICAgYXdhaXQgcGFnZS5zZXRVc2VyQWdlbnQoJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjAuMC4wLjAgU2FmYXJpLzUzNy4zNicpO1xuICAgIGF3YWl0IHBhZ2UuZ290bygnaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL3BvcHVsYXIvJywgeyBcbiAgICAgIHdhaXRVbnRpbDogJ25ldHdvcmtpZGxlMicsXG4gICAgICB0aW1lb3V0OiAzMDAwMCBcbiAgICB9KTtcblxuICAgIGF3YWl0IHBhZ2Uud2FpdEZvclNlbGVjdG9yKCdbZGF0YS10ZXN0aWQ9XCJwb3N0LWNvbnRhaW5lclwiXScsIHsgdGltZW91dDogMTUwMDAgfSk7XG5cbiAgICBjb25zdCB0cmVuZHMgPSBhd2FpdCBwYWdlLmV2YWx1YXRlKCgpID0+IHtcbiAgICAgIGNvbnN0IHBvc3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdGVzdGlkPVwicG9zdC1jb250YWluZXJcIl0nKTtcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICAgIFxuICAgICAgcG9zdHMuZm9yRWFjaCgocG9zdCwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKGluZGV4IDwgMTApIHtcbiAgICAgICAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSBwb3N0LnF1ZXJ5U2VsZWN0b3IoJ2gzJyk7XG4gICAgICAgICAgY29uc3Qgc3VicmVkZGl0RWxlbWVudCA9IHBvc3QucXVlcnlTZWxlY3RvcignW2RhdGEtdGVzdGlkPVwic3VicmVkZGl0LW5hbWVcIl0nKTtcbiAgICAgICAgICBjb25zdCB1cHZvdGVzRWxlbWVudCA9IHBvc3QucXVlcnlTZWxlY3RvcignW2RhdGEtdGVzdGlkPVwidm90ZS1hcnJvd3NcIl0gYnV0dG9uJyk7XG4gICAgICAgICAgY29uc3QgbGlua0VsZW1lbnQgPSBwb3N0LnF1ZXJ5U2VsZWN0b3IoJ2gzIGEnKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBjb25zdCBzdWJyZWRkaXQgPSBzdWJyZWRkaXRFbGVtZW50Py50ZXh0Q29udGVudD8udHJpbSgpO1xuICAgICAgICAgIGNvbnN0IHVwdm90ZXMgPSB1cHZvdGVzRWxlbWVudD8uZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJyk7XG4gICAgICAgICAgY29uc3QgaHJlZiA9IGxpbmtFbGVtZW50Py5nZXRBdHRyaWJ1dGUoJ2hyZWYnKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAodGl0bGUgJiYgc3VicmVkZGl0ICYmIGhyZWYpIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7XG4gICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgICAgICAgc3VicmVkZGl0OiBzdWJyZWRkaXQsXG4gICAgICAgICAgICAgIHVwdm90ZXM6IHVwdm90ZXMgfHwgJ04vQScsXG4gICAgICAgICAgICAgIGNvbW1lbnRzOiAnTi9BJyxcbiAgICAgICAgICAgICAgdXJsOiBocmVmLnN0YXJ0c1dpdGgoJ2h0dHAnKSA/IGhyZWYgOiBgaHR0cHM6Ly9yZWRkaXQuY29tJHtocmVmfWBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRyZW5kcztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdSZWRkaXQgUG9wdWxhciBlcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggUmVkZGl0IHRyZW5kaW5nIGRhdGEnKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAoYnJvd3NlcikgYXdhaXQgYnJvd3Nlci5jbG9zZSgpO1xuICB9XG59XG5cbi8vIFNwb3RpZnkgVG9wIFNvbmdzIFNjcmFwZXIgdXNpbmcgUHVwcGV0ZWVyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3BvdGlmeVRyZW5kaW5nKCkge1xuICBsZXQgYnJvd3NlcjtcbiAgdHJ5IHtcbiAgICBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaChnZXRCcm93c2VyT3B0aW9ucygpKTtcbiAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7XG4gICAgXG4gICAgYXdhaXQgcGFnZS5zZXRVc2VyQWdlbnQoJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjAuMC4wLjAgU2FmYXJpLzUzNy4zNicpO1xuICAgIGF3YWl0IHBhZ2UuZ290bygnaHR0cHM6Ly9rd29yYi5uZXQvc3BvdGlmeS9jb3VudHJ5L2luLmh0bWwnLCB7IFxuICAgICAgd2FpdFVudGlsOiAnbmV0d29ya2lkbGUyJyxcbiAgICAgIHRpbWVvdXQ6IDMwMDAwIFxuICAgIH0pO1xuXG4gICAgYXdhaXQgcGFnZS53YWl0Rm9yU2VsZWN0b3IoJ3RhYmxlLnNvcnRhYmxlIHRib2R5IHRyJywgeyB0aW1lb3V0OiAxNTAwMCB9KTtcblxuICAgIGNvbnN0IHRyZW5kcyA9IGF3YWl0IHBhZ2UuZXZhbHVhdGUoKCkgPT4ge1xuICAgICAgY29uc3Qgcm93cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3RhYmxlLnNvcnRhYmxlIHRib2R5IHRyJyk7XG4gICAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgICBcbiAgICAgIHJvd3MuZm9yRWFjaCgocm93LCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAoaW5kZXggPCAxMCkge1xuICAgICAgICAgIGNvbnN0IHJhbmtFbGVtZW50ID0gcm93LnF1ZXJ5U2VsZWN0b3IoJ3RkOm50aC1jaGlsZCgxKScpO1xuICAgICAgICAgIGNvbnN0IHNvbmdBcnRpc3RFbGVtZW50ID0gcm93LnF1ZXJ5U2VsZWN0b3IoJ3RkOm50aC1jaGlsZCgyKScpO1xuICAgICAgICAgIGNvbnN0IHN0cmVhbXNFbGVtZW50ID0gcm93LnF1ZXJ5U2VsZWN0b3IoJ3RkOm50aC1jaGlsZCgzKScpO1xuICAgICAgICAgIFxuICAgICAgICAgIGNvbnN0IHJhbmsgPSByYW5rRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBjb25zdCBzb25nQXJ0aXN0ID0gc29uZ0FydGlzdEVsZW1lbnQ/LnRleHRDb250ZW50Py50cmltKCk7XG4gICAgICAgICAgY29uc3Qgc3RyZWFtcyA9IHN0cmVhbXNFbGVtZW50Py50ZXh0Q29udGVudD8udHJpbSgpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChzb25nQXJ0aXN0ICYmIHJhbmsgJiYgc3RyZWFtcykge1xuICAgICAgICAgICAgY29uc3QgcGFydHMgPSBzb25nQXJ0aXN0LnNwbGl0KCcgLSAnKTtcbiAgICAgICAgICAgIGNvbnN0IGFydGlzdCA9IHBhcnRzWzBdIHx8ICdVbmtub3duIEFydGlzdCc7XG4gICAgICAgICAgICBjb25zdCBzb25nID0gcGFydHNbMV0gfHwgc29uZ0FydGlzdDtcblxuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgICAgICAgcmFuazogcmFuayxcbiAgICAgICAgICAgICAgc29uZzogc29uZyxcbiAgICAgICAgICAgICAgYXJ0aXN0OiBhcnRpc3QsXG4gICAgICAgICAgICAgIHN0cmVhbXM6IHN0cmVhbXMsXG4gICAgICAgICAgICAgIHVybDogYGh0dHBzOi8vb3Blbi5zcG90aWZ5LmNvbS9zZWFyY2gvJHtlbmNvZGVVUklDb21wb25lbnQoc29uZ0FydGlzdCl9YFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdHJlbmRzO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Nwb3RpZnkgVHJlbmRpbmcgZXJyb3I6JywgZXJyb3IpO1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIFNwb3RpZnkgdHJlbmRpbmcgZGF0YScpO1xuICB9IGZpbmFsbHkge1xuICAgIGlmIChicm93c2VyKSBhd2FpdCBicm93c2VyLmNsb3NlKCk7XG4gIH1cbn1cblxuLy8gTmV0ZmxpeCBUb3AgMTAgU2NyYXBlciB1c2luZyBQdXBwZXRlZXJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXROZXRmbGl4VHJlbmRpbmcoKSB7XG4gIGxldCBicm93c2VyO1xuICB0cnkge1xuICAgIGJyb3dzZXIgPSBhd2FpdCBwdXBwZXRlZXIubGF1bmNoKGdldEJyb3dzZXJPcHRpb25zKCkpO1xuICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKTtcbiAgICBcbiAgICBhd2FpdCBwYWdlLnNldFVzZXJBZ2VudCgnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2Jyk7XG4gICAgYXdhaXQgcGFnZS5nb3RvKCdodHRwczovL2ZsaXhwYXRyb2wuY29tL3RvcDEwL25ldGZsaXgvaW5kaWEvdG9kYXkvJywgeyBcbiAgICAgIHdhaXRVbnRpbDogJ25ldHdvcmtpZGxlMicsXG4gICAgICB0aW1lb3V0OiAzMDAwMCBcbiAgICB9KTtcblxuICAgIGF3YWl0IHBhZ2Uud2FpdEZvclNlbGVjdG9yKCcudGFibGUtdG9wMTAgdGJvZHkgdHInLCB7IHRpbWVvdXQ6IDE1MDAwIH0pO1xuXG4gICAgY29uc3QgdHJlbmRzID0gYXdhaXQgcGFnZS5ldmFsdWF0ZSgoKSA9PiB7XG4gICAgICBjb25zdCByb3dzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhYmxlLXRvcDEwIHRib2R5IHRyJyk7XG4gICAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgICBcbiAgICAgIHJvd3MuZm9yRWFjaCgocm93LCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAoaW5kZXggPCAxMCkge1xuICAgICAgICAgIGNvbnN0IHJhbmtFbGVtZW50ID0gcm93LnF1ZXJ5U2VsZWN0b3IoJy50YWJsZS10ZDpmaXJzdC1jaGlsZCcpO1xuICAgICAgICAgIGNvbnN0IHRpdGxlRWxlbWVudCA9IHJvdy5xdWVyeVNlbGVjdG9yKCcudGl0bGUnKTtcbiAgICAgICAgICBjb25zdCBwb3N0ZXJFbGVtZW50ID0gcm93LnF1ZXJ5U2VsZWN0b3IoJ2ltZycpO1xuICAgICAgICAgIFxuICAgICAgICAgIGNvbnN0IHJhbmsgPSByYW5rRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKTtcbiAgICAgICAgICBjb25zdCBwb3N0ZXIgPSBwb3N0ZXJFbGVtZW50Py5nZXRBdHRyaWJ1dGUoJ3NyYycpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmICh0aXRsZSAmJiByYW5rICYmIHBvc3Rlcikge1xuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgICAgICAgcmFuazogcmFuayxcbiAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICAgICAgICBwb3N0ZXI6IHBvc3Rlci5zdGFydHNXaXRoKCdodHRwJykgPyBwb3N0ZXIgOiBgaHR0cHM6Ly9mbGl4cGF0cm9sLmNvbSR7cG9zdGVyfWAsXG4gICAgICAgICAgICAgIHVybDogYGh0dHBzOi8vd3d3Lm5ldGZsaXguY29tL3NlYXJjaD9xPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRpdGxlKX1gXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9KTtcblxuICAgIHJldHVybiB0cmVuZHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignTmV0ZmxpeCBUcmVuZGluZyBlcnJvcjonLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggTmV0ZmxpeCB0cmVuZGluZyBkYXRhJyk7XG4gIH0gZmluYWxseSB7XG4gICAgaWYgKGJyb3dzZXIpIGF3YWl0IGJyb3dzZXIuY2xvc2UoKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInB1cHBldGVlciIsImF4aW9zIiwiZ2V0QnJvd3Nlck9wdGlvbnMiLCJoZWFkbGVzcyIsImFyZ3MiLCJpZ25vcmVEZWZhdWx0QXJncyIsImRlZmF1bHRWaWV3cG9ydCIsIndpZHRoIiwiaGVpZ2h0IiwiZ2V0R29vZ2xlVHJlbmRpbmciLCJicm93c2VyIiwibGF1bmNoIiwicGFnZSIsIm5ld1BhZ2UiLCJzZXRVc2VyQWdlbnQiLCJnb3RvIiwid2FpdFVudGlsIiwidGltZW91dCIsIndhaXRGb3JTZWxlY3RvciIsInRyZW5kcyIsImV2YWx1YXRlIiwiaXRlbXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZXN1bHRzIiwiZm9yRWFjaCIsIml0ZW0iLCJpbmRleCIsInRpdGxlRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0cmFmZmljRWxlbWVudCIsInRpdGxlIiwidGV4dENvbnRlbnQiLCJ0cmltIiwidHJhZmZpYyIsInB1c2giLCJ0aHVtYm5haWwiLCJyZWxhdGVkUXVlcmllcyIsInVybCIsImVuY29kZVVSSUNvbXBvbmVudCIsImVycm9yIiwiY29uc29sZSIsIkVycm9yIiwiY2xvc2UiLCJnZXRZb3V0dWJlVHJlbmRpbmciLCJ2aWRlb3MiLCJ2aWRlbyIsImNoYW5uZWxFbGVtZW50Iiwidmlld3NFbGVtZW50IiwidGh1bWJuYWlsRWxlbWVudCIsImdldEF0dHJpYnV0ZSIsImNoYW5uZWwiLCJ2aWV3cyIsImhyZWYiLCJwdWJsaXNoZWQiLCJzdGFydHNXaXRoIiwiZ2V0VHdpdHRlclRyZW5kaW5nIiwidHJlbmRFbGVtZW50cyIsImVsZW1lbnQiLCJoYXNodGFnIiwibGVuZ3RoIiwicmFuayIsImdldFdpa2lwZWRpYVRyZW5kaW5nIiwidG9kYXkiLCJEYXRlIiwieWVzdGVyZGF5Iiwic2V0RGF0ZSIsImdldERhdGUiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJtb250aCIsIlN0cmluZyIsImdldE1vbnRoIiwicGFkU3RhcnQiLCJkYXkiLCJyZXNwb25zZSIsImdldCIsImhlYWRlcnMiLCJkYXRhIiwiYXJ0aWNsZXMiLCJmaWx0ZXIiLCJhcnRpY2xlIiwic2xpY2UiLCJtYXAiLCJyZXBsYWNlIiwidG9Mb2NhbGVTdHJpbmciLCJnZXRSZWRkaXRQb3B1bGFyIiwicG9zdHMiLCJwb3N0Iiwic3VicmVkZGl0RWxlbWVudCIsInVwdm90ZXNFbGVtZW50IiwibGlua0VsZW1lbnQiLCJzdWJyZWRkaXQiLCJ1cHZvdGVzIiwiY29tbWVudHMiLCJnZXRTcG90aWZ5VHJlbmRpbmciLCJyb3dzIiwicm93IiwicmFua0VsZW1lbnQiLCJzb25nQXJ0aXN0RWxlbWVudCIsInN0cmVhbXNFbGVtZW50Iiwic29uZ0FydGlzdCIsInN0cmVhbXMiLCJwYXJ0cyIsInNwbGl0IiwiYXJ0aXN0Iiwic29uZyIsImdldE5ldGZsaXhUcmVuZGluZyIsInBvc3RlckVsZW1lbnQiLCJwb3N0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/scrapers.js\n");

/***/ }),

/***/ "(api)/./pages/api/google.js":
/*!*****************************!*\
  !*** ./pages/api/google.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_scrapers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/scrapers */ \"(api)/./lib/scrapers.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_scrapers__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_scrapers__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const trends = await (0,_lib_scrapers__WEBPACK_IMPORTED_MODULE_0__.getGoogleTrending)();\n        res.status(200).json(trends);\n    } catch (error) {\n        console.error(\"Google Trends API error:\", error);\n        res.status(500).json({\n            message: \"Failed to fetch Google trends\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ29vZ2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ3VEO0FBRXhDLGVBQWVDLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1QyxJQUFJRCxJQUFJRSxNQUFNLEtBQUssT0FBTztRQUN4QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBcUI7SUFDOUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTUMsU0FBUyxNQUFNUixnRUFBaUJBO1FBQ3RDRyxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDRTtJQUN2QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDRCQUE0QkE7UUFDMUNOLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUFnQztJQUNsRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJlbmRwdWxzZS8uL3BhZ2VzL2FwaS9nb29nbGUuanM/ZmI5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IGdldEdvb2dsZVRyZW5kaW5nIH0gZnJvbSAnLi4vLi4vbGliL3NjcmFwZXJzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ0dFVCcpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBtZXNzYWdlOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgdHJlbmRzID0gYXdhaXQgZ2V0R29vZ2xlVHJlbmRpbmcoKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih0cmVuZHMpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0dvb2dsZSBUcmVuZHMgQVBJIGVycm9yOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdGYWlsZWQgdG8gZmV0Y2ggR29vZ2xlIHRyZW5kcycgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnZXRHb29nbGVUcmVuZGluZyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsInRyZW5kcyIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/google.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgoogle&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgoogle.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();